#!/bin/bash
# Determine if a ticket or commit is deployed on the currently active k8s cluster context.
# See print_usage() for details.
#
# General procedure:
# 1) On the cluster, get the commit ID of the image associated to an application's pod.
# 2) Get the commit ID if the first commit whose log message matches the given TICKET search expression
# 3) Ask git whether the commit ID of the ticket is an ancestor of the commit ID of the image deployed on the cluster.
#    If it is, then the TICKET is included in the deployment, else it's not.
APP=$1
TICKET=$2

function print_usage() {
    cat<<EOF
Usage: $0 APP TICKET

Determines if a ticket is deployed on the currently active k8s cluster context.

APP: k8s application name deployed on the cluster e.g. adapter-gmb
TICKET: ticket to look for in git (actually a git log --grep argument)

First set the current k8s context with 'kubectl config use-context'.
Run this script from the git repository corresponding to APP.

Example:

cd ~/git/adapter-gmb
git checkout master && git pull
kubectl config use-context sweetiq-adapters-production-east-admin
$0 adapter-gmb DA-118

EOF
}

if [[ -z "${APP}" || -z "${TICKET}" ]]
then
    print_usage
    exit 1
fi

cluster=$(kubectl config current-context)

deployed_commit=$(kubectl get pod -l app="${APP}" -o jsonpath='{.items[*].spec.containers[*].image}' | tr -s '[[:space:]]' '\n' | uniq | sed -e 's/.*://' | cut -d'-' -f 2)

if [[ -z "${deployed_commit}" ]]
then
    echo "Could not find ${APP} on ${cluster}"
    exit 1
fi

ticket_commit=$(git log --no-merges -1 --oneline --grep="${TICKET}" --format=%h)

if [[ -z "${ticket_commit}" ]]
then
    # Maybe user gave a commit ID, search for it
    ticket_commit=$(git log --no-merges -1 --oneline --format=%h "${TICKET}" 2>/dev/null)
fi

if [[ -z "${ticket_commit}" ]]
then
    echo "Could not find ${TICKET} commit in current git repository"
    exit 1
fi

git merge-base --is-ancestor ${ticket_commit} ${deployed_commit}
result=$?

commit_log=$(git log --no-merges -1 --pretty=format:"%h - %s %cr <%an - %ae>" --abbrev-commit --date=relative ${ticket_commit})

if [[ ${result} == 0 ]]
then
    msg="DEPLOYED on ${cluster}" 
else
    msg="NOT DEPLOYED on ${cluster}"
fi

echo ${msg}: ${commit_log}

exit ${result}
